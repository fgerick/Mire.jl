var documenterSearchIndex = {"docs":
[{"location":"man/examples/inertialmodes/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"man/examples/inertialmodes/#Inertial-modes-in-a-triaxial-ellipsoid","page":"Examples","title":"Inertial modes in a triaxial ellipsoid","text":"","category":"section"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"We want to solve the inertial mode equation","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"partial_t mathbfu = -2mathbfOmegatimesmathbfu-nabla p","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"by expanding the velocity in a Cartesian polynomial basis and projecting onto these basis vectors following Lebovitz (1989).","category":"page"},{"location":"man/examples/inertialmodes/#Setting-up-the-problem","page":"Examples","title":"Setting up the problem","text":"","category":"section"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"# Include the packages in Julia\nusing Mire, LinearAlgebra, PyPlot #PyPlot uses matplotlib for plots","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"The triaxial ellipsoid is defined by","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"fracx^2a^2+fracy^2b^2+fracz^2c^2=1","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"The rotation axis is taken to be along z, so that mathbfOmega=(001). We truncate at a maximum monomial polynomial degree N = 3, so that each monomial x^y^jz^k has i+j+kleq N.","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"a,b,c = 1.1,0.9,0.7\nV = Ellipsoid(a,b,c) #volume\nΩ = [0.0,0.0,1.0] #rotation axis\nN = 3 #truncation degree\n\n# create hydrodynamic problem, using 3-D LebovitzBasis for the velocity:\np = HDProblem(N, V, Ω, LebovitzBasis) ","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"From here we can assemble the problem p. This means that we project the left and right hand side of the inertial mode equation onto the basis vectors mathbfu_j given by the LebovitzBasis. The pressure gradient force vanishes naturally in the projection, due to the incompressibility of the velocity. For the integration of the Cartesian polynomials (or rather the individual monomials) a convenient formula is used (compare Lebovitz, 1989). ","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"We can assemble the problem p by calling (threads=true enables multithreading to accelerate larger scale problems) ","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"assemble!(p; threads=false)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"The left and right hand side matrices p.LHS and p.RHS, respectively, then represent the left and right hand side of","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"omega int mathbfu_i cdotmathbfu_j mathrmdV = -2int (mathbfOmegatimesmathbfu_i)cdotmathbfu_j mathrmdV","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"so that the eigen problem reads","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"omega Bmathbfx=Amathbfx","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"With B = p.LHS and A = p.RHS.","category":"page"},{"location":"man/examples/inertialmodes/#Solving-for-eigen-modes","page":"Examples","title":"Solving for eigen modes","text":"","category":"section"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"There are several ways to solve for eigen solutions of the generalized eigen problem. For small matrices we can simply solve directly","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"omega Bmathbfx=Amathbfx","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"This can be done in Julia using the LAPACK routines for dense eigen problems are included in the standard library LinearAlgebra. Since A and B are sparse for now we have to convert B to a dense array by caling Matrix. This is only feasible for small N, since we are now dealing with dense arrays. For larger N and thus larger matrices iterative sparse solvers should be applied. An example for the sparse eigen solvers using Arpack.jl is given elsewhere.","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"A, B = Matrix(p.RHS), Matrix(p.LHS)\nevals, evecs = eigen(A, B)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"Given the eigen values evals and eigen vectors evecs.","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"The eigen vectors mathbfx_i contain the coefficients x_ji, so that the eigen velocity mathbfv_i is given by","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"mathbfv_i = sum_jx_jimathbfu_j","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"where mathbfu_j is the j-th basis vector in uj, given in p.vbasis.el[j].","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"We can reconstruct the eigenvelocities mathbfv_k for all k by calling velocities:","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"v = velocities(p.vbasis.el, evecs)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"v is now an array of 3-D vectors where the components are cartesian polynomials with complex coefficients.","category":"page"},{"location":"man/examples/inertialmodes/#Plotting-the-mode","page":"Examples","title":"Plotting the mode","text":"","category":"section"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"An example of plotting streamlines at equatorial and meridional sections of one of the modes.","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"Include some PyPlot.jl plotting routines.","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"include(joinpath(dirname(pathof(Mire)),\"../example/plotting.jl\"))\n\nfunction plotmode(a,b,c,v_k; kwargs...)\n    figure()\n    plot_velocity_equator(a,b,v_k; kwargs...)\n    title(\"x-y plane\")\n#     colorbar()\n    figure()\n    plot_velocity_meridional_x(b,c,v_k; kwargs...)\n    title(\"y-z plane\")\n#     colorbar()\n    figure()\n    plot_velocity_meridional_y(a,c,v_k; kwargs...)\n    title(\"x-z plane\")\n#     colorbar()\nend","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"We plot the m=2 quasi-geostrophic eigen mode with a frequency of","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"k = findfirst(0.23 .< abs.(imag.(evals)) .< 0.24)\nprintln(\"ω = \",imag.(evals[k]),\"𝕚\")\n#ω = -0.23780828249417196𝕚","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"And to plot ","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"plotmode(a,b,c,v[k], density=1.4, cmap=:plasma)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"(Image: png)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"(Image: png)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"(Image: png)","category":"page"},{"location":"#Mire.jl","page":"Mire.jl","title":"Mire.jl","text":"","category":"section"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Modes In Rotating Ellipsoids","category":"page"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Toolbox written in Julia to solve eigen modes of rapidly rotating (magneto)hydrodynamics in an ellipsoid using Cartesian polynomials.","category":"page"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Some example usage is given in the section Documentation and in the Continuous Integration file.","category":"page"},{"location":"#Installation","page":"Mire.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Install Mire.jl from the julia REPL prompt with","category":"page"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"] add https://github.com/fgerick/Mire.jl.git","category":"page"},{"location":"#Development","page":"Mire.jl","title":"Development","text":"","category":"section"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Mire.jl is currently developed by Felix Gerick","category":"page"},{"location":"man/functions/#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"CurrentModule = Mire","category":"page"},{"location":"man/functions/#Defining-the-Volume","page":"Functions","title":"Defining the Volume","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"Ellipsoid","category":"page"},{"location":"man/functions/#Mire.Ellipsoid","page":"Functions","title":"Mire.Ellipsoid","text":"Ellipsoid{T<:Number} <: Volume{T}\n\nVolume type Ellipsoid. Create by calling Ellipsoid(a,b,c), with a,b,c the semi-axes. a,b,c can be of any Number type.\n\nExamples: Ellipsoid(1.1,1.0,0.9) is a Ellipsoid{Float64}, Ellipsoid(1//1,1//2,1//5) is a Ellispoid{Rational{Int64}}.\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"Sphere","category":"page"},{"location":"man/functions/#Mire.Sphere","page":"Functions","title":"Mire.Sphere","text":"Sphere{T<:Number} <: Volume{T}\n\nVolume type Sphere. Create by calling Sphere{T}(), with T any Number type. Default: Sphere(T) gives a Sphere{Float64}(). For other types use, e.g. Sphere{Rational{BigInt}}().\n\n\n\n\n\n","category":"type"},{"location":"man/functions/#Vector-bases","page":"Functions","title":"Vector bases","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"LebovitzBasis","category":"page"},{"location":"man/functions/#Mire.LebovitzBasis","page":"Functions","title":"Mire.LebovitzBasis","text":"LebovitzBasis{T<:Number,Vol<:Volume{T}} <: VectorBasis{T,Vol}\n\nBasis of 3-D vector field, so that mathbfucdotmathbfn = 0 at partialmathcalV and nablacdotmathbfu = 0 after Lebovitz (1989).\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"QGBasis","category":"page"},{"location":"man/functions/#Mire.QGBasis","page":"Functions","title":"Mire.QGBasis","text":"QGBasis{T<:Number,Vol<:Volume{T}} <: VectorBasis{T,Vol}\n\nBasis of QG vector field (Gerick et al., 2020), so that mathbfu=nabla(h^3x^ny^m)timesnabla(zh).\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"QGIMBasis","category":"page"},{"location":"man/functions/#Mire.QGIMBasis","page":"Functions","title":"Mire.QGIMBasis","text":"QGIMBasis{T<:Number,Vol<:Sphere{T}} <: VectorBasis{T,Vol}\n\nBasis of complex QG inertial modes (Maffei et al., 2017). This basis is orthonormal.\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"QGRIMBasis","category":"page"},{"location":"man/functions/#Mire.QGRIMBasis","page":"Functions","title":"Mire.QGRIMBasis","text":"QGRIMBasis{T<:Number,Vol<:Sphere{T}} <: VectorBasis{T,Vol}\n\nReal basis similar to the QG inertial modes (Maffei et al., 2017). They are not the solutions to the QG inertial mode equation and they are not orthogonal.\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"ConductingMFBasis","category":"page"},{"location":"man/functions/#Mire.ConductingMFBasis","page":"Functions","title":"Mire.ConductingMFBasis","text":"ConductingMFBasis{T<:Number,Vol<:Volume{T}} <: VectorBasis{T,Vol}\n\nBasis of 3-D magnetic field, so that mathbfBcdotmathbfn = 0 at partialmathcalV and nablacdotmathbfB = 0 after Lebovitz (1989). It is exactly the same as LebovitzBasis.\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"InsulatingMFBasis","category":"page"},{"location":"man/functions/#Mire.InsulatingMFBasis","page":"Functions","title":"Mire.InsulatingMFBasis","text":"InsulatingMFBasis{T<:Number,Vol<:Sphere{T}} <: VectorBasis{T,Vol}\n\nBasis of insulating magnetic fields following Gerick et al. (2021). For now, only for Vol<:Sphere{T}, i.e. in a spherical domain. \n\n\n\n\n\n","category":"type"},{"location":"man/functions/#Setting-up-the-problem","page":"Functions","title":"Setting up the problem","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"HDProblem","category":"page"},{"location":"man/functions/#Mire.HDProblem","page":"Functions","title":"Mire.HDProblem","text":"HDProblem{T<:Number,Vol<:Volume{T}} <: MireProblem{T, Vol}\n\nDefines hydrodynamic problem.\n\nExample:\n\nN = 5\nΩ = [0,0,1.0]\nV = Ellipsoid(1.1,1.0,0.9)\nproblem = HDProblem(N,V,Ω,LebovitzBasis)\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"MHDProblem","category":"page"},{"location":"man/functions/#Mire.MHDProblem","page":"Functions","title":"Mire.MHDProblem","text":"MHDProblem{T<:Number,Vol<:Volume{T}} <: MireProblem{T,Vol}\n\nDefines magnetohydrodynamic problem.\n\nExample for a hybrid QG model with 3-D magnetic field with  conducting boundary condition and QG velocities:\n\nN = 5\nΩ = [0,0,1.0]\na,b,c = 1.1,1.0,0.9\nV = Ellipsoid(a,b,c)\nB0 = [-y/b^2,x/a^2,0] #Malkus field\nproblem = MHDProblem(N,V,Ω,B0,QGBasis,ConductingMFBasis)\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"assemble!","category":"page"},{"location":"man/functions/#Mire.assemble!","page":"Functions","title":"Mire.assemble!","text":"assemble!(P::HDProblem{T,V}; threads=false, verbose=false, kwargs...) where {T,V}\n\nAssembles the matrices P.LHS and P.RHS, i.e. projecting the velocity basis P.vbasis on the inertial acceleration and Coriolis force.\n\n\n\n\n\nassemble!(P::MHDProblem{T,V}) where {T,V}\n\nAssembles the matrices P.LHS and P.RHS, i.e. projecting the velocity and magnetic field bases on the inertial acceleration, Coriolis force, Lorentz force and mgnetic advection.\n\n\n\n\n\n","category":"function"},{"location":"man/functions/#Low-level-functions","page":"Functions","title":"Low level functions","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"Functions for low level control of the problem.","category":"page"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"projectforce","category":"page"},{"location":"man/functions/#Mire.projectforce","page":"Functions","title":"Mire.projectforce","text":"projectforce(vs_i, vs_j, cmat, forcefun, args...; kwargs...)\n\nProject basis vs_i onto the forcing forcefun(vs_j, args...) using precached monomials in cmat.\n\n\n\n\n\n","category":"function"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"projectforce!","category":"page"},{"location":"man/functions/#Mire.projectforce!","page":"Functions","title":"Mire.projectforce!","text":"projectforce!(i0, j0, itemps, jtemps, valtemps, cmat, vs_i, vs_j, forcefun, args...; verbose=false, thresh=10eps())\n\nProject basis vs_i onto the forcing forcefun(vs_j, args...). Pushes indices and values of non-zero entries into the itemps,jtemps and valtems arrays. i0 and j0 are the origin of indices (useful for combining multiple equations, should be 0 to have no shift in indices). See projectforce to construct a sparse array from the indices and values.\n\n\n\n\n\n","category":"function"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"projectforcet!","category":"page"},{"location":"man/functions/#Mire.projectforcet!","page":"Functions","title":"Mire.projectforcet!","text":"projectforcet!(args...)\n\nMultithreaded version of projectforce!. Input has to be adapted to number of threads!\n\n\n\n\n\n","category":"function"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"inner_product","category":"page"},{"location":"man/functions/#Mire.inner_product","page":"Functions","title":"Mire.inner_product","text":"inner_product(u, v, cmat)\n\nInner product in an ellipsoidal volume int  mathbfucdot mathbfv dV,  using precached monomial integrations in cmat.\n\n\n\n\n\ninner_product(u, v, a, b, c)\n\nInner product in an ellipsoidal volume int  mathbfucdot mathbfv dV.\n\nwarning: Missing factor\nThe factor pi is removed in the integration to be able to use exact integration using Rational.  Remember to reintroduce it when the actual value of the integration is needed!\n\n\n\n\n\n","category":"function"}]
}
