var documenterSearchIndex = {"docs":
[{"location":"man/examples/inertialmodes/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"The examples are also available as notebooks in the source code folder example.","category":"page"},{"location":"man/examples/inertialmodes/#Inertial-modes-in-a-triaxial-ellipsoid","page":"Examples","title":"Inertial modes in a triaxial ellipsoid","text":"","category":"section"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"We want to solve the inertial mode equation","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"partial_t mathbfu = -2mathbfOmegatimesmathbfu-nabla p","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"by expanding the velocity in a Cartesian polynomial basis and projecting onto these basis vectors following Lebovitz (1989).","category":"page"},{"location":"man/examples/inertialmodes/#Setting-up-the-problem","page":"Examples","title":"Setting up the problem","text":"","category":"section"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"The triaxial ellipsoid is defined by","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"fracx^2a^2+fracy^2b^2+fracz^2c^2=1","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"We simplify the problem by taking the rotation axis along z, so that mathbfOmega=(001).","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"We truncate the problem at a maximum monomial x^iy^jz^k degree i+j+kleq N = 3.","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"# Include the packages in Julia\nusing Mire, LinearAlgebra, PyPlot #PyPlot uses matplotlib for plots","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"a,b,c = 1.1,0.9,0.7\nΩ = [0,0,1]\nN = 3","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"Assembling projects the left and right hand side of the inertial mode equation onto the basis vectors mathbfu_j. The pressure gradient force vanishes naturally in the projection. For the integration a convenient formula is used (compare Lebovitz, 1989). Calling assemblehd outputs two sparse matrices A and B and the basis vectors uj. The Matrix B represents the left hand side and A the right hand side of","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"omega int mathbfu_i cdotmathbfu_j mathrmdV = -2int (mathbfOmegatimesmathbfu_i)cdotmathbfu_j mathrmdV","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"so that the eigen problem reads","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"omega Bmathbfx=Amathbfx","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"B,A, uj = assemblehd(N, a, b, c, Ω)","category":"page"},{"location":"man/examples/inertialmodes/#Solving-for-eigen-modes","page":"Examples","title":"Solving for eigen modes","text":"","category":"section"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"There are several ways to solve for eigen solutions of the generalized eigen problem. For small matrices we can simply invert Matrix B to reduce the problem to a standard eigen problem","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"B^-1Amathbfx=omegamathbfx","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"In Julia, the LAPACK routines for dense eigen problems are included in the standard library LinearAlgebra. Since A and B are sparse for now we have to convert B to a dense array by Matrix(B) before calling the inverse function inv. This is only feasible for small N, since we are now dealing with dense arrays. For larger N and thus larger matrices iterative sparse solvers should be applied.","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"esol = eigen(inv(Matrix(B))*A)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"The eigen values and vectors are accessed by esol.values and esol.vectors respectively.","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"The eigen vectors mathbfx_i contain the coefficients x_ji, so that the eigen velocity mathbfv_i is given by","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"mathbfv_i = sum_jx_jimathbfu_j","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"where mathbfu_j is the j-th basis vector in uj.","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"We can reconstruct the k-th eigenvelocity mathbfv_k by calling eigenvel:","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"k = eachindex(esol.values)[0.23.<imag.(esol.values).<0.24]\nv_k = eigenvel(esol.vectors[:,k],uj)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"v_k is now an array of cartesian polynomials with complex coefficients.","category":"page"},{"location":"man/examples/inertialmodes/#Plotting-the-mode","page":"Examples","title":"Plotting the mode","text":"","category":"section"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"include(joinpath(dirname(pathof(Mire)),\"../example/plotting.jl\"))\n\nfunction plotmode(a,b,c,v_k; kwargs...)\n    figure()\n    plot_velocity_equator(a,b,v_k; kwargs...)\n    title(\"x-y plane\")\n#     colorbar()\n    figure()\n    plot_velocity_meridional_x(b,c,v_k; kwargs...)\n    title(\"y-z plane\")\n#     colorbar()\n    figure()\n    plot_velocity_meridional_y(a,c,v_k; kwargs...)\n    title(\"x-z plane\")\n#     colorbar()\nend","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"We plot the m=2 quasi-geostrophic eigen mode with a frequency of","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"println(\"ω = \",imag.(esol.values[k]),\"𝕚\")","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"ω = 0.23780828249416838𝕚","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"plotmode(a,b,c,v_k, density=1.4, cmap=:plasma)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"(Image: png)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"(Image: png)","category":"page"},{"location":"man/examples/inertialmodes/","page":"Examples","title":"Examples","text":"(Image: png)","category":"page"},{"location":"#Mire.jl","page":"Mire.jl","title":"Mire.jl","text":"","category":"section"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Modes In Rotating Ellipsoids","category":"page"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Toolbox written in Julia to solve eigen modes of rapidly rotating (magneto)hydrodynamics in an ellipsoid using Cartesian polynomials.","category":"page"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Some example usage is given in the section Documentation and in the Continuous Integration file.","category":"page"},{"location":"#Installation","page":"Mire.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Install Mire.jl from the julia REPL prompt with","category":"page"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"] add https://github.com/fgerick/Mire.jl.git","category":"page"},{"location":"#Development","page":"Mire.jl","title":"Development","text":"","category":"section"},{"location":"","page":"Mire.jl","title":"Mire.jl","text":"Mire.jl is currently developed by Felix Gerick","category":"page"},{"location":"man/functions/#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"CurrentModule = Mire","category":"page"},{"location":"man/functions/#Defining-the-Volume","page":"Functions","title":"Defining the Volume","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"Ellipsoid","category":"page"},{"location":"man/functions/#Mire.Ellipsoid","page":"Functions","title":"Mire.Ellipsoid","text":"Ellipsoid{T<:Number} <: Volume{T}\n\nVolume type Ellipsoid. Create by calling Ellipsoid(a,b,c), with a,b,c the semi-axes. a,b,c can be of any Number type.\n\nExamples: Ellipsoid(1.1,1.0,0.9) is a Ellipsoid{Float64}, Ellipsoid(1//1,1//2,1//5) is a Ellispoid{Rational{Int64}}.\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"Sphere","category":"page"},{"location":"man/functions/#Mire.Sphere","page":"Functions","title":"Mire.Sphere","text":"Sphere{T<:Number} <: Volume{T}\n\nVolume type Sphere. Create by calling Sphere{T}(), with T any Number type. Default: Sphere(T) gives a Sphere{Float64}(). For other types use, e.g. Sphere{Rational{BigInt}}().\n\n\n\n\n\n","category":"type"},{"location":"man/functions/#Vector-bases","page":"Functions","title":"Vector bases","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"LebovitzBasis","category":"page"},{"location":"man/functions/#Mire.LebovitzBasis","page":"Functions","title":"Mire.LebovitzBasis","text":"LebovitzBasis{T<:Number,Vol<:Volume{T}} <: VectorBasis{T,Vol}\n\nBasis of 3-D vector field, so that mathbfucdotvecn = 0 at partialmathcalV and nablacdotmathbfu = 0 after Lebovitz (1989).\n\n\n\n\n\n","category":"type"},{"location":"man/functions/#Setting-up-the-problem","page":"Functions","title":"Setting up the problem","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"HDProblem","category":"page"},{"location":"man/functions/#Mire.HDProblem","page":"Functions","title":"Mire.HDProblem","text":"HDProblem{T<:Number,Vol<:Volume{T}}\n\nDefines hydrodynamic problem.\n\nExample:\n\nN = 5\nΩ = [0,0,1.0]\nV = Ellipsoid(1.1,1.0,0.9)\nproblem = HDProblem(N,V,Ω,LebovitzBasis)\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"MHDProblem","category":"page"},{"location":"man/functions/#Mire.MHDProblem","page":"Functions","title":"Mire.MHDProblem","text":"MHDProblem{T<:Number,Vol<:Volume{T}} <: MireProblem{T,Vol}\n\nDefines magnetohydrodynamic problem.\n\nExample for a hybrid QG model with 3-D magnetic field with  conducting boundary condition and QG velocities:\n\nN = 5\nΩ = [0,0,1.0]\na,b,c = 1.1,1.0,0.9\nV = Ellipsoid(a,b,c)\nB0 = [-y/b^2,x/a^2,0] #Malkus field\nproblem = MHDProblem(N,V,Ω,B0,QGBasis,ConductingMFBasis)\n\n\n\n\n\n","category":"type"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"assemble!","category":"page"},{"location":"man/functions/#Mire.assemble!","page":"Functions","title":"Mire.assemble!","text":"assemble!(P::HDProblem{T,V}; threads=false, verbose=false, kwargs...) where {T,V}\n\nAssembles the matrices P.LHS and P.RHS, i.e. projecting the velocity basis P.vbasis on the inertial acceleration and Coriolis force.\n\n\n\n\n\nassemble!(P::MHDProblem{T,V}) where {T,V}\n\nAssembles the matrices P.LHS and P.RHS, i.e. projecting the velocity and magnetic field bases on the inertial acceleration, Coriolis force, Lorentz force and mgnetic advection.\n\n\n\n\n\n","category":"function"},{"location":"man/functions/#Low-level-functions","page":"Functions","title":"Low level functions","text":"","category":"section"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"Functions for low level control of the problem.","category":"page"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"projectforce","category":"page"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"projectforce!","category":"page"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"projectforcet!","category":"page"},{"location":"man/functions/#Mire.projectforcet!","page":"Functions","title":"Mire.projectforcet!","text":"projectforcet!(args...)\n\nMultithreaded projection \n\n\n\n\n\n","category":"function"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"inner_product","category":"page"},{"location":"man/functions/#Mire.inner_product","page":"Functions","title":"Mire.inner_product","text":"inner_product(u,v,a,b,c)\n\nDefines inner product in an ellipsoidal volume intlangle uvrangle dV.\n\n\n\n\n\n","category":"function"},{"location":"man/functions/","page":"Functions","title":"Functions","text":"uqg","category":"page"},{"location":"man/functions/#Mire.uqg","page":"Functions","title":"Mire.uqg","text":"uqg(n::Integer, m::Integer, V::Volume{T}) where T\n\nGenerate basis vector mathbfu=nabla(h^3x^ny^m)timesnabla(zh)\n\n\n\n\n\n","category":"function"}]
}
